---
title: "Prediction-Assignment-Writeup"
author: "SMS"
date: "8 de março de 2017"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Prediction-Assignment-Writeup

Background

Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement – a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset).

Data

The training data for this project are available here:

https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv

The test data are available here:

https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv

The data for this project come from this source: http://groupware.les.inf.puc-rio.br/har. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment.

#I-) Essential Packages
```{r pack}
IscaretInstalled <- require("caret")
if(!IscaretInstalled){
    install.packages("caret")
    library("caret")
    }

IsrandomForestInstalled <- require("randomForest")
if(!IsrandomForestInstalled){
    install.packages("randomForest")
    library("randomForest")
    }

IsRpartInstalled <- require("rpart")        
if(!IsRpartInstalled){
    install.packages("rpart")
    library("rpart")
    }

#Set seed for reproducability
set.seed(20000)
```

#II-) Data Processing
```{r process}
#Load the data
trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"   
testUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv" 
```

#III-)Cleaning data 
```{r clean}
#Delete missing values 
training <- read.csv(url(trainUrl), na.strings=c("NA","#DIV/0!",""))  
testing <- read.csv(url(testUrl), na.strings=c("NA","#DIV/0!",""))

#Remove variables with near zero variance
training<-training[,colSums(is.na(training)) == 0]
testing <-testing[,colSums(is.na(testing)) == 0]

#Remove columns that are not predictors, which are the the seven first columns
training   <-training[,-c(1:7)]
testing <-testing[,-c(1:7)]

#The data after cleaning
dim(training)
```

#IV-) Cross-validation
```{r cross}
#In order to get out-of-sample errors, split the training data in training (75%) and testing (25%) data) subsets:
inTrain <- createDataPartition(y=training$classe, p=0.75, list=FALSE)    
NEOTraining <- training[inTrain, ]
NEOTesting <- training[-inTrain, ]  
dim(NEOTraining)
dim(NEOTesting)
```

#V-) Prediction Models
```{r model}
#DECISION TREE
#Fit model on NEOTraining data
fitDT <- rpart(classe ~ ., data=NEOTraining, method="class")

#Use model to predict class in validation set (NEOTesting)
predictionDT <- predict(fitDT, NEOTesting, type = "class")

#Estimate the errors of the prediction algorithm in the Decision Tree model
confusionMatrix(NEOTesting$classe, predictionDT)

#RANDOM FOREST
#Fit model on NEOTraining data
fitRF <- randomForest(classe ~ ., data=NEOTraining, method="class")

#Use model to predict class in validation set (NEOTesting)
predictionRF <- predict(fitRF, NEOTesting, type = "class")

#Estimate the errors of the prediction algorithm in the Random Forest
confusionMatrix(NEOTesting$classe, predictionRF)
```

#VI-) TEST THE MODEL TO PREDICT 20 DIFFERENT TEST CASES
```{r quiz}
# Perform prediction
predictSubmission <- predict(fitRF, testing, type="class")
predictSubmission
```

